\ metamodel: metaL language 
# (metacircular implementation)

module: Ouroboros												`MODULE  !
'metaL programming language (metacircular implementation)'		`TITLE   !
'Dmitry Ponyatov <<dponyatov@gmail.com>>'						`AUTHOR  !
'CC BY-NC-ND'													`LICENSE !
'https://github.com/ponyatov/Ouroboros'							`GITHUB  !
'https://github.com/ponyatov/Ouroboros/wiki'					`WIKI	 !
'ouroboros.png'													`LOGO	 !

`README.md											   FILE dup `README  !
	'![logo](' LOGO + ')' +			<<
	'# '   MODULE +					<<
	'### ' TITLE  +					<<
	''								<<
	'(c) ' AUTHOR + ' ' + LICENSE + <<
	''								<<
	'github: ' GITHUB +				<<
	''								<<
	'  wiki: ' WIKI   +				<<
>src .

`Makefile												FILE dup `MK 	 !
	'log.log: src.src py.py'		<<
	'\tpython py.py $< > $@'
		' && tail $(TAIL) $@' +		<<
>src .

`log.log												FILE	 `LOG	 !
`src.src												FILE	 `SRC	 !
`py.py													FILE 	 `PY	 !

`bat.bat												FILE dup `BAT	 !
	'@gvim -p'
		' ' + LOG +		\\ log file
		' ' + SRC + 
		' ' + PY + 
	<<
>src .

W ??

PY
	section: import
		module: os	<<
		module: sys	<<
	<<

	section: FRAMES <<
	section: PLY 	dup `PLY ! <<
	section: FORTH	<<
	section: META	<<
	section: INIT	<<
.

module: ply.lex `AS PLY .! PY ??

PY >src ??

W ??

any blablabla
